// This file was auto-generated by the veyron vdl tool.
// Source(s):  node.vdl
package com.veyron.services.mgmt.node.vdlgen;

import com.veyron2.ipc.ServerCall;
import com.veyron2.ipc.VeyronException;
import com.veyron2.services.mgmt.build.vdlgen.BinaryDescription;
import com.veyron2.services.mgmt.node.vdlgen.ApplicationService;
import com.veyron2.services.mgmt.node.vdlgen.Description;

public class Server { 
	/* Server stub creation methods for interfaces in file: node.vdl. */
	public static Object newConfig(ConfigService service) { 
		return new ConfigStub(service);
	}
	public static Object newNode(NodeService service) { 
		final com.veyron2.services.mgmt.node.vdlgen.Server.NodeStub node = (com.veyron2.services.mgmt.node.vdlgen.Server.NodeStub)com.veyron2.services.mgmt.node.vdlgen.Server.newNode(service);
		final Server.ConfigStub config = (Server.ConfigStub)Server.newConfig(service);
		return new NodeStub(service, node, config);
	}
	
	/* Server stubs for interfaces in file: node.vdl. */
	public static class ConfigStub {
		private final ConfigService service;

		ConfigStub(ConfigService service) {
			this.service = service;
		}
		/**
		 * Returns all tags associated with the provided method or null if the method isn't implemented
		 * by this service.
		 */
		@SuppressWarnings("unused")
		public Object[] getMethodTags(ServerCall call, String method) { 
			if (method == "Set") {
				return new Object[]{  };
			}
			return null;
		}
		// Methods from interface Config.
		public void set(ServerCall call, String key, String value) throws VeyronException { 
			this.service.set(call, key, value);
		}
	}
	public static class NodeStub {
		private final NodeService service;
		private final com.veyron2.services.mgmt.node.vdlgen.Server.NodeStub node;
		private final Server.ConfigStub config;

		NodeStub(NodeService service, com.veyron2.services.mgmt.node.vdlgen.Server.NodeStub node, Server.ConfigStub config) {
			this.service = service;
			this.node = node;
			this.config = config;
		}
		/**
		 * Returns all tags associated with the provided method or null if the method isn't implemented
		 * by this service.
		 */
		@SuppressWarnings("unused")
		public Object[] getMethodTags(ServerCall call, String method) { 
			{
				final Object[] tags = this.node.getMethodTags(call, method);
				if (tags != null) return tags;
			}
			{
				final Object[] tags = this.config.getMethodTags(call, method);
				if (tags != null) return tags;
			}
			return null;
		}
		// Methods from interface Node.
		// Methods from sub-interface Node.
		public Description describe(ServerCall call) throws VeyronException {
			return this.node.describe(call);
		}
		public boolean isRunnable(ServerCall call, BinaryDescription Binary) throws VeyronException {
			return this.node.isRunnable(call, Binary);
		}
		public void reset(ServerCall call, long Deadline) throws VeyronException {
			this.node.reset(call, Deadline);
		}
		public String install(ServerCall call) throws VeyronException {
			return this.node.install(call);
		}
		public void refresh(ServerCall call) throws VeyronException {
			this.node.refresh(call);
		}
		public void restart(ServerCall call) throws VeyronException {
			this.node.restart(call);
		}
		public void resume(ServerCall call) throws VeyronException {
			this.node.resume(call);
		}
		public void revert(ServerCall call) throws VeyronException {
			this.node.revert(call);
		}
		public java.util.ArrayList<String> start(ServerCall call) throws VeyronException {
			return this.node.start(call);
		}
		public void stop(ServerCall call, long Deadline) throws VeyronException {
			this.node.stop(call, Deadline);
		}
		public void suspend(ServerCall call) throws VeyronException {
			this.node.suspend(call);
		}
		public void uninstall(ServerCall call) throws VeyronException {
			this.node.uninstall(call);
		}
		public void update(ServerCall call) throws VeyronException {
			this.node.update(call);
		}
		// Methods from sub-interface Config.
		public void set(ServerCall call, String key, String value) throws VeyronException {
			this.config.set(call, key, value);
		}
	}
}
