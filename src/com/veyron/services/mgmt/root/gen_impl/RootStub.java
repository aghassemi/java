// This file was auto-generated by the veyron vdl tool.
// Source(s):  root.vdl
package com.veyron.services.mgmt.root.gen_impl;

import com.veyron.services.mgmt.root.Root;
import com.veyron.services.mgmt.root.RootFactory;
import com.veyron.services.mgmt.root.RootService;

/* Client stub for interface: Root. */
public final class RootStub implements Root {
	private static final java.lang.String vdlIfacePathOpt = "com.veyron.services.mgmt.root.Root";
	private final com.veyron2.ipc.Client client;
	private final java.lang.String name;

	public RootStub(com.veyron2.ipc.Client client, java.lang.String name) {
		this.client = client;
		this.name = name;
	}
	// Methods from interface Root.
	@Override
	public void reset(com.veyron2.ipc.Context context, long Deadline) throws com.veyron2.ipc.VeyronException {
		reset(context, Deadline, null);
	}
	@Override
	public void reset(com.veyron2.ipc.Context context, long Deadline, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
		// Prepare input arguments.
		final java.lang.Object[] inArgs = new java.lang.Object[]{ new java.lang.Long(Deadline) };

		// Add VDL path option.
		// NOTE(spetrovic): this option is temporary and will be removed soon after we switch
		// Java to encoding/decoding from vom.Value objects.
		if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
		if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
			veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, RootStub.vdlIfacePathOpt);
		}

		// Start the call.
		final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.name, "Reset", inArgs, veyronOpts);

		// Prepare output argument and finish the call.
			final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{  };
			call.finish(resultTypes);

	}
}
