
// This file was auto-generated by the veyron vdl tool.
// Source: inspector.vdl
package com.veyron.examples.inspector;


public final class Details { 
		private String name;
		private long size;
		private int mode;
	// TODO: add native time format to the idl+vom
// Seconds since the start of the Unix epoch
	private long modUnixSecs;
	// Nanoseconds in the current second
	private int modNano;
		private boolean isDir;

	public Details(String name, long size, int mode, long modUnixSecs, int modNano, boolean isDir) { 
		this.name = name;
		this.size = size;
		this.mode = mode;
		this.modUnixSecs = modUnixSecs;
		this.modNano = modNano;
		this.isDir = isDir;
	}
	public String getName() { return this.name; }
	public long getSize() { return this.size; }
	public int getMode() { return this.mode; }
	public long getModUnixSecs() { return this.modUnixSecs; }
	public int getModNano() { return this.modNano; }
	public boolean getIsDir() { return this.isDir; }

	public void setName(String name) { this.name = name; }
	public void setSize(long size) { this.size = size; }
	public void setMode(int mode) { this.mode = mode; }
	public void setModUnixSecs(long modUnixSecs) { this.modUnixSecs = modUnixSecs; }
	public void setModNano(int modNano) { this.modNano = modNano; }
	public void setIsDir(boolean isDir) { this.isDir = isDir; }

	@Override
	public boolean equals(java.lang.Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (this.getClass() != obj.getClass()) return false;
		final Details other = (Details)obj;
		if (!(this.name.equals(other.name))) return false;
		if (this.size != other.size) return false;
		if (this.mode != other.mode) return false;
		if (this.modUnixSecs != other.modUnixSecs) return false;
		if (this.modNano != other.modNano) return false;
		if (this.isDir != other.isDir) return false;
		return true;
	}
	@Override
	public int hashCode() {
		int result = 1;
		final int prime = 31;
		result = prime * result + (name == null ? 0 : name.hashCode());
		result = prime * result + Long.valueOf(size).hashCode();
		result = prime * result + mode;
		result = prime * result + Long.valueOf(modUnixSecs).hashCode();
		result = prime * result + modNano;
		result = prime * result + Boolean.valueOf(isDir).hashCode();
		return result;
	}
}
