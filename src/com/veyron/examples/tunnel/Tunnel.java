// This file was auto-generated by the veyron vdl tool.
// Source: tunnel.vdl
package com.veyron.examples.tunnel;

import com.veyron2.Options;
import com.veyron2.ipc.Context;
import com.veyron2.ipc.VeyronException;
import com.veyron2.vdl.ClientStream;
import java.util.ArrayList;

public interface Tunnel { 
	// The Forward method is used for network forwarding. All the data sent over
// the byte stream is forwarded to the requested network address and all the
// data received from that network connection is sent back in the reply
// stream.
	public ClientStream<ArrayList<Byte>,ArrayList<Byte>,Void> forward(Context context, String network, String address) throws VeyronException;
	public ClientStream<ArrayList<Byte>,ArrayList<Byte>,Void> forward(Context context, String network, String address, Options veyronOpts) throws VeyronException;
	// The Shell method is used to either run shell commands remotely, or to open
// an interactive shell. The data received over the byte stream is sent to the
// shell's stdin, and the data received from the shell's stdout and stderr is
// sent back in the reply stream. It returns the exit status of the shell
// command.
	public ClientStream<ClientShellPacket,ServerShellPacket,Integer> shell(Context context, String command, ShellOpts shellOpts) throws VeyronException;
	public ClientStream<ClientShellPacket,ServerShellPacket,Integer> shell(Context context, String command, ShellOpts shellOpts, Options veyronOpts) throws VeyronException;
}
