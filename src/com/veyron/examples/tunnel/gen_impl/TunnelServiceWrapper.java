// This file was auto-generated by the veyron vdl tool.
// Source(s):  tunnel.vdl
package com.veyron.examples.tunnel.gen_impl;

public final class TunnelServiceWrapper {

    private final com.veyron.examples.tunnel.TunnelService service;




    public TunnelServiceWrapper(final com.veyron.examples.tunnel.TunnelService service) {
        this.service = service;
        
        
    }

    /**
     * Returns all tags associated with the provided method or null if the method isn't implemented
     * by this service.
     */
    public java.lang.Object[] getMethodTags(final com.veyron2.ipc.ServerCall call, final java.lang.String method) throws com.veyron2.ipc.VeyronException {
        
        if ("forward".equals(method)) {
            return new java.lang.Object[] {
                 new com.veyron2.security.Label(4), 
            };
        }
        
        if ("getMethodTags".equals(method)) {
            return new java.lang.Object[] {
                
            };
        }
        
        if ("shell".equals(method)) {
            return new java.lang.Object[] {
                 new com.veyron2.security.Label(4), 
            };
        }
        
        
        throw new com.veyron2.ipc.VeyronException("method: " + method + " not found");
    }

     
    
    public void forward(final com.veyron2.ipc.ServerCall call, final java.lang.String network, final java.lang.String address) throws com.veyron2.ipc.VeyronException {
        
        final com.veyron2.vdl.Stream<java.util.ArrayList<java.lang.Byte>, java.util.ArrayList<java.lang.Byte>> stream = new com.veyron2.vdl.Stream<java.util.ArrayList<java.lang.Byte>, java.util.ArrayList<java.lang.Byte>>() {
            @Override
            public void send(java.util.ArrayList<java.lang.Byte> item) throws com.veyron2.ipc.VeyronException {
                call.send(item);
            }
            @Override
            public java.util.ArrayList<java.lang.Byte> recv() throws java.io.EOFException, com.veyron2.ipc.VeyronException {
                final com.google.common.reflect.TypeToken<?> type = new com.google.common.reflect.TypeToken< java.util.ArrayList<java.lang.Byte> >() {
                    private static final long serialVersionUID = 1L;
                };
                final java.lang.Object result = call.recv(type);
                try {
                    return (java.util.ArrayList<java.lang.Byte>)result;
                } catch (java.lang.ClassCastException e) {
                    throw new com.veyron2.ipc.VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
                }
            }
        };
         
         this.service.forward( call , network, address  ,stream  );
    }

    public int shell(final com.veyron2.ipc.ServerCall call, final java.lang.String command, final com.veyron.examples.tunnel.ShellOpts shellOpts) throws com.veyron2.ipc.VeyronException {
        
        final com.veyron2.vdl.Stream<com.veyron.examples.tunnel.ClientShellPacket, com.veyron.examples.tunnel.ServerShellPacket> stream = new com.veyron2.vdl.Stream<com.veyron.examples.tunnel.ClientShellPacket, com.veyron.examples.tunnel.ServerShellPacket>() {
            @Override
            public void send(com.veyron.examples.tunnel.ClientShellPacket item) throws com.veyron2.ipc.VeyronException {
                call.send(item);
            }
            @Override
            public com.veyron.examples.tunnel.ServerShellPacket recv() throws java.io.EOFException, com.veyron2.ipc.VeyronException {
                final com.google.common.reflect.TypeToken<?> type = new com.google.common.reflect.TypeToken< com.veyron.examples.tunnel.ServerShellPacket >() {
                    private static final long serialVersionUID = 1L;
                };
                final java.lang.Object result = call.recv(type);
                try {
                    return (com.veyron.examples.tunnel.ServerShellPacket)result;
                } catch (java.lang.ClassCastException e) {
                    throw new com.veyron2.ipc.VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
                }
            }
        };
         
         return  this.service.shell( call , command, shellOpts  ,stream  );
    }



 

}
