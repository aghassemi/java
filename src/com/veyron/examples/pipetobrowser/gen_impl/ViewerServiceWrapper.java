// This file was auto-generated by the veyron vdl tool.
// Source(s):  p2b.vdl
package com.veyron.examples.pipetobrowser.gen_impl;

import com.google.common.reflect.TypeToken;
import com.veyron.examples.pipetobrowser.Viewer;
import com.veyron.examples.pipetobrowser.ViewerFactory;
import com.veyron.examples.pipetobrowser.ViewerService;
import com.veyron2.ipc.ServerCall;
import com.veyron2.ipc.VeyronException;
import com.veyron2.vdl.Stream;
import java.util.ArrayList;

public class ViewerServiceWrapper {

	private final ViewerService service;

	public ViewerServiceWrapper(ViewerService service) {
		this.service = service;
	}
	/**
	 * Returns all tags associated with the provided method or null if the method isn't implemented
	 * by this service.
	 */
	public Object[] getMethodTags(ServerCall call, String method) throws VeyronException { 
		if ("pipe".equals(method)) {
			return new Object[]{  };
		}
        if ("getMethodTags".equals(method)) {
            return new Object[]{};
        }
		throw new VeyronException("method: " + method + " not found");
	}
	// Methods from interface Viewer.
	public Object pipe(ServerCall call) throws VeyronException { 
		final ServerCall serverCall = call;
		final Stream<Void,ArrayList<Byte>> stream = new Stream<Void,ArrayList<Byte>>() {
			@Override
			public void send(Void item) throws VeyronException {
				serverCall.send(item);
			}
			@Override
			public ArrayList<Byte> recv() throws java.io.EOFException, VeyronException {
				final TypeToken<?> type = new TypeToken<ArrayList<Byte>>() {};
				final Object result = serverCall.recv(type);
				try {
					return (ArrayList<Byte>)result;
				} catch (java.lang.ClassCastException e) {
					throw new VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
				}
			}
		};
		return this.service.pipe(call, stream);
	}
}
