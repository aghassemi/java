// This file was auto-generated by the veyron vdl tool.
// Source(s):  node.vdl
package com.veyron2.services.mgmt.node.vdlgen;

import com.veyron2.ipc.ServerCall;
import com.veyron2.ipc.VeyronException;
import com.veyron2.services.mgmt.build.vdlgen.BinaryDescription;
import java.util.ArrayList;

public class Server { 
	/* Server stub creation methods for interfaces in file: node.vdl. */
	public static Object newApplication(ApplicationService service) { 
		return new ApplicationStub(service);
	}
	public static Object newNode(NodeService service) { 
		final Server.ApplicationStub application = (Server.ApplicationStub)Server.newApplication(service);
		return new NodeStub(service, application);
	}
	
	/* Server stubs for interfaces in file: node.vdl. */
	public static class ApplicationStub {
		private final ApplicationService service;

		ApplicationStub(ApplicationService service) {
			this.service = service;
		}
		/**
		 * Returns all tags associated with the provided method or null if the method isn't implemented
		 * by this service.
		 */
		@SuppressWarnings("unused")
		public Object[] getMethodTags(ServerCall call, String method) { 
			if (method == "Install") {
				return new Object[]{  };
			}
			if (method == "Refresh") {
				return new Object[]{  };
			}
			if (method == "Restart") {
				return new Object[]{  };
			}
			if (method == "Resume") {
				return new Object[]{  };
			}
			if (method == "Revert") {
				return new Object[]{  };
			}
			if (method == "Start") {
				return new Object[]{  };
			}
			if (method == "Stop") {
				return new Object[]{  };
			}
			if (method == "Suspend") {
				return new Object[]{  };
			}
			if (method == "Uninstall") {
				return new Object[]{  };
			}
			if (method == "Update") {
				return new Object[]{  };
			}
			return null;
		}
		// Methods from interface Application.
		public String install(ServerCall call) throws VeyronException { 
			return this.service.install(call);
		}
		public void refresh(ServerCall call) throws VeyronException { 
			this.service.refresh(call);
		}
		public void restart(ServerCall call) throws VeyronException { 
			this.service.restart(call);
		}
		public void resume(ServerCall call) throws VeyronException { 
			this.service.resume(call);
		}
		public void revert(ServerCall call) throws VeyronException { 
			this.service.revert(call);
		}
		public ArrayList<String> start(ServerCall call) throws VeyronException { 
			return this.service.start(call);
		}
		public void stop(ServerCall call, long Deadline) throws VeyronException { 
			this.service.stop(call, Deadline);
		}
		public void suspend(ServerCall call) throws VeyronException { 
			this.service.suspend(call);
		}
		public void uninstall(ServerCall call) throws VeyronException { 
			this.service.uninstall(call);
		}
		public void update(ServerCall call) throws VeyronException { 
			this.service.update(call);
		}
	}
	public static class NodeStub {
		private final NodeService service;
		private final Server.ApplicationStub application;

		NodeStub(NodeService service, Server.ApplicationStub application) {
			this.service = service;
			this.application = application;
		}
		/**
		 * Returns all tags associated with the provided method or null if the method isn't implemented
		 * by this service.
		 */
		@SuppressWarnings("unused")
		public Object[] getMethodTags(ServerCall call, String method) { 
			{
				final Object[] tags = this.application.getMethodTags(call, method);
				if (tags != null) return tags;
			}
			if (method == "Describe") {
				return new Object[]{  };
			}
			if (method == "IsRunnable") {
				return new Object[]{  };
			}
			if (method == "Reset") {
				return new Object[]{  };
			}
			return null;
		}
		// Methods from interface Node.
		public Description describe(ServerCall call) throws VeyronException { 
			return this.service.describe(call);
		}
		public boolean isRunnable(ServerCall call, BinaryDescription Binary) throws VeyronException { 
			return this.service.isRunnable(call, Binary);
		}
		public void reset(ServerCall call, long Deadline) throws VeyronException { 
			this.service.reset(call, Deadline);
		}
		// Methods from sub-interface Application.
		public String install(ServerCall call) throws VeyronException {
			return this.application.install(call);
		}
		public void refresh(ServerCall call) throws VeyronException {
			this.application.refresh(call);
		}
		public void restart(ServerCall call) throws VeyronException {
			this.application.restart(call);
		}
		public void resume(ServerCall call) throws VeyronException {
			this.application.resume(call);
		}
		public void revert(ServerCall call) throws VeyronException {
			this.application.revert(call);
		}
		public ArrayList<String> start(ServerCall call) throws VeyronException {
			return this.application.start(call);
		}
		public void stop(ServerCall call, long Deadline) throws VeyronException {
			this.application.stop(call, Deadline);
		}
		public void suspend(ServerCall call) throws VeyronException {
			this.application.suspend(call);
		}
		public void uninstall(ServerCall call) throws VeyronException {
			this.application.uninstall(call);
		}
		public void update(ServerCall call) throws VeyronException {
			this.application.update(call);
		}
	}
}
