// This file was auto-generated by the veyron vdl tool.
// Source: repository.vdl
package com.veyron2.services.mgmt.repository;

import com.veyron2.Options;
import com.veyron2.ipc.Context;
import com.veyron2.ipc.VeyronException;
import com.veyron2.services.mgmt.binary.PartInfo;
import com.veyron2.vdl.ClientStream;
import java.util.ArrayList;

/**
 * Binary can be used to store and retrieve veyron application
 * binaries.
 *
 * To create a binary, clients first invoke the Create() method that
 * specifies the number of parts the binary consists of. Clients then
 * uploads the individual parts through the Upload() method, which
 * identifies the part being uploaded. To resume an upload after a
 * failure, clients invoke the UploadStatus() method, which returns a
 * slice that identifies which parts are missing.
 *
 * To download a binary, clients first invoke Stat(), which returns
 * information describing the binary, including the number of parts
 * the binary consists of. Clients then download the individual parts
 * through the Download() method, which identifies the part being
 * downloaded. Alternatively, clients can download the binary through
 * HTTP using a transient URL available through the DownloadURL()
 * method.
 *
 * To delete the binary, clients invoke the Delete() method.
**/
public interface Binary { 
	// Create expresses the intent to create a binary identified by the
// veyron name suffix consisting of the given number of parts. If
// the suffix identifies a binary that has already been created, the
// method returns an error.
	public void create(Context context, int nparts) throws VeyronException;
	public void create(Context context, int nparts, Options veyronOpts) throws VeyronException;
	// Delete deletes the binary identified by the veyron name
// suffix. If the binary that has not been created, the method
// returns an error.
	public void delete(Context context) throws VeyronException;
	public void delete(Context context, Options veyronOpts) throws VeyronException;
	// Download opens a stream that can used for downloading the given
// part of the binary identified by the veyron name suffix. If the
// binary part has not been uploaded, the method returns an
// error. If the Delete() method is invoked when the Download()
// method is in progress, the outcome the Download() method is
// undefined.
	public ClientStream<Void,ArrayList<Byte>,Void> download(Context context, int part) throws VeyronException;
	public ClientStream<Void,ArrayList<Byte>,Void> download(Context context, int part, Options veyronOpts) throws VeyronException;
	// DownloadURLOut packages output arguments for method DownloadURL.
	public static class DownloadURLOut { 
		public String uRL;
		public long tTL;
	}
	// DownloadURL returns a transient URL from which the binary
// identified by the veyron name suffix can be downloaded using the
// HTTP protocol. If not all parts of the binary have been uploaded,
// the method returns an error.
	public Binary.DownloadURLOut downloadURL(Context context) throws VeyronException;
	public Binary.DownloadURLOut downloadURL(Context context, Options veyronOpts) throws VeyronException;
	// Stat returns information describing the parts of the binary
// identified by the veyron name suffix. If the binary has not been
// created, the method returns an error.
	public ArrayList<PartInfo> stat(Context context) throws VeyronException;
	public ArrayList<PartInfo> stat(Context context, Options veyronOpts) throws VeyronException;
	// Upload opens a stream that can be used for uploading the given
// part of the binary identified by the veyron name suffix. If the
// binary has not been created, the method returns an error. If the
// binary part has been uploaded, the method returns an error. If
// the same binary part is being uploaded by another caller, the
// method returns an error.
	public ClientStream<ArrayList<Byte>,Void,Void> upload(Context context, int part) throws VeyronException;
	public ClientStream<ArrayList<Byte>,Void,Void> upload(Context context, int part, Options veyronOpts) throws VeyronException;
}
