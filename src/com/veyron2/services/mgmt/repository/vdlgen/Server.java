// This file was auto-generated by the veyron vdl tool.
// Source(s):  repository.vdl
package com.veyron2.services.mgmt.repository.vdlgen;

import com.google.common.reflect.TypeToken;
import com.veyron2.ipc.ServerCall;
import com.veyron2.ipc.VeyronException;
import com.veyron2.services.mgmt.application.vdlgen.Envelope;
import com.veyron2.vdl.Stream;
import java.util.ArrayList;

public class Server { 
	/* Server stub creation methods for interfaces in file: repository.vdl. */
	public static Object newApplication(ApplicationService service) { 
		return new ApplicationStub(service);
	}
	public static Object newContent(ContentService service) { 
		return new ContentStub(service);
	}
	public static Object newProfile(ProfileService service) { 
		return new ProfileStub(service);
	}
	
	/* Server stubs for interfaces in file: repository.vdl. */
	public static class ApplicationStub {
		private final ApplicationService service;

		ApplicationStub(ApplicationService service) {
			this.service = service;
		}
		/**
		 * Returns all tags associated with the provided method or null if the method isn't implemented
		 * by this service.
		 */
		@SuppressWarnings("unused")
		public Object[] getMethodTags(ServerCall call, String method) { 
			if (method == "Match") {
				return new Object[]{ 1 };
			}
			return null;
		}
		// Methods from interface Application.
		public Envelope match(ServerCall call, ArrayList<String> Profiles) throws VeyronException { 
			return this.service.match(call, Profiles);
		}
	}
	public static class ContentStub {
		private final ContentService service;

		ContentStub(ContentService service) {
			this.service = service;
		}
		/**
		 * Returns all tags associated with the provided method or null if the method isn't implemented
		 * by this service.
		 */
		@SuppressWarnings("unused")
		public Object[] getMethodTags(ServerCall call, String method) { 
			if (method == "Delete") {
				return new Object[]{ 2 };
			}
			if (method == "Download") {
				return new Object[]{ 1 };
			}
			if (method == "Upload") {
				return new Object[]{ 2 };
			}
			return null;
		}
		// Methods from interface Content.
		public void delete(ServerCall call) throws VeyronException { 
			this.service.delete(call);
		}
		public void download(ServerCall call) throws VeyronException { 
			final ServerCall serverCall = call;
			final Stream<ArrayList<Byte>,Void> stream = new Stream<ArrayList<Byte>,Void>() {
				@Override
				public void send(ArrayList<Byte> item) throws VeyronException {
					serverCall.send(item);
				}
				@Override
				public Void recv() throws java.io.EOFException, VeyronException {
					final TypeToken<?> type = new TypeToken<Void>() {};
					final Object result = serverCall.recv(type);
					try {
						return (Void)result;
					} catch (java.lang.ClassCastException e) {
						throw new VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
					}
				}
			};
			this.service.download(call, stream);
		}
		public String upload(ServerCall call) throws VeyronException { 
			final ServerCall serverCall = call;
			final Stream<Void,ArrayList<Byte>> stream = new Stream<Void,ArrayList<Byte>>() {
				@Override
				public void send(Void item) throws VeyronException {
					serverCall.send(item);
				}
				@Override
				public ArrayList<Byte> recv() throws java.io.EOFException, VeyronException {
					final TypeToken<?> type = new TypeToken<ArrayList<Byte>>() {};
					final Object result = serverCall.recv(type);
					try {
						return (ArrayList<Byte>)result;
					} catch (java.lang.ClassCastException e) {
						throw new VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
					}
				}
			};
			return this.service.upload(call, stream);
		}
	}
	public static class ProfileStub {
		private final ProfileService service;

		ProfileStub(ProfileService service) {
			this.service = service;
		}
		/**
		 * Returns all tags associated with the provided method or null if the method isn't implemented
		 * by this service.
		 */
		@SuppressWarnings("unused")
		public Object[] getMethodTags(ServerCall call, String method) { 
			if (method == "Label") {
				return new Object[]{ 1 };
			}
			if (method == "Description") {
				return new Object[]{ 1 };
			}
			return null;
		}
		// Methods from interface Profile.
		public String label(ServerCall call) throws VeyronException { 
			return this.service.label(call);
		}
		public String description(ServerCall call) throws VeyronException { 
			return this.service.description(call);
		}
	}
}
