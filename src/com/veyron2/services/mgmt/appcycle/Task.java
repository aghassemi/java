
// This file was auto-generated by the veyron vdl tool.
// Source: appcycle.vdl
package com.veyron2.services.mgmt.appcycle;


/**
 * Task is streamed by Stop to provide the client with a sense of the progress
 * of the shutdown.
 * The meaning of Progress and Goal are up to the developer (the server provides
 * the framework with values for these).  The recommended meanings are:
 * - Progress: how far along the shutdown sequence the server is.  This should
 *   be a monotonically increasing number.
 * - Goal: when Progress reaches this value, the shutdown is expected to
 *   complete.  This should not change during a stream, but could change if
 *   e.g. new shutdown tasks are triggered that were not forseen at the outset
 *   of the shutdown.
**/
public final class Task { 
		private int progress;
		private int goal;

	public Task(int progress, int goal) { 
		this.progress = progress;
		this.goal = goal;
	}
	public int getProgress() { return this.progress; }
	public int getGoal() { return this.goal; }

	public void setProgress(int progress) { this.progress = progress; }
	public void setGoal(int goal) { this.goal = goal; }

	@Override
	public boolean equals(java.lang.Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (this.getClass() != obj.getClass()) return false;
		final Task other = (Task)obj;
		if (this.progress != other.progress) return false;
		if (this.goal != other.goal) return false;
		return true;
	}
	@Override
	public int hashCode() {
		int result = 1;
		final int prime = 31;
		result = prime * result + progress;
		result = prime * result + goal;
		return result;
	}
}
