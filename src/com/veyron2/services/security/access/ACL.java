
// This file was auto-generated by the veyron vdl tool.
// Source: service.vdl
package com.veyron2.services.security.access;


// ACL (Access Control List) tracks which principals and groups have access to
// an object and which principals and groups specifically do not have access
// to an object.  For example:
//   ACL {
//     In {
//       Principals {
//         "user1/*": ["Read", "Write"],
//         "user2/*": ["Read"],
//       }
//       Groups {
//         Group{"google.com/engineering"}: ["Read"],
//       }
//     }
//     NotIn {
//       Principals {
//         "user1/*": ["Write"],
//       }
//       Groups {
//         Group{"google.com/eng-interns"}: ["Read", "Write", "Admin"],
//       }
//     }
//   }
// NotIn subtracts privileges.  In this example, it says that "user1/*" has
// only  "Read" access.  All of engineering has read access except for
// engineering interns.
//
// Principals can have multiple names.  As long as the principal has a name
// that matches In and not NotIn, it is authorized. The reasoning is that the
// principal can always hide a name if it wants to, so requiring all names to
// satisfy the policy does not make sense.
public class ACL { 
	// In represents the set of principals and groups that can access the object
// only if they are not also present in NotIn.
public Entries in;
	// NotIn represents the set of principals and groups that do not have access
// to the object.  It effectively subtracts permissions from In.
public Entries notIn;
}
