// This file was auto-generated by the veyron vdl tool.
// Source(s):  base.vdl
package com.veyron2.vdl.test_base.gen_impl;

import com.google.common.reflect.TypeToken;
import com.veyron2.ipc.ServerCall;
import com.veyron2.ipc.VeyronException;
import com.veyron2.vdl.Stream;
import com.veyron2.vdl.test_base.Args;
import com.veyron2.vdl.test_base.CompComp;
import com.veyron2.vdl.test_base.Composites;
import com.veyron2.vdl.test_base.NamedStruct;
import com.veyron2.vdl.test_base.NestedArgs;
import com.veyron2.vdl.test_base.Scalars;
import com.veyron2.vdl.test_base.ServiceA;
import com.veyron2.vdl.test_base.ServiceAFactory;
import com.veyron2.vdl.test_base.ServiceAService;
import com.veyron2.vdl.test_base.ServiceB;
import com.veyron2.vdl.test_base.ServiceBFactory;
import com.veyron2.vdl.test_base.ServiceBService;
import com.veyron2.vdl.test_base.VeyronConsts;

public class ServiceAServiceWrapper {

	private final ServiceAService service;

	public ServiceAServiceWrapper(ServiceAService service) {
		this.service = service;
	}
	/**
	 * Returns all tags associated with the provided method or null if the method isn't implemented
	 * by this service.
	 */
	public Object[] getMethodTags(ServerCall call, String method) throws VeyronException { 
		if ("methodA1".equals(method)) {
			return new Object[]{  };
		}
		if ("methodA2".equals(method)) {
			return new Object[]{  };
		}
		if ("methodA3".equals(method)) {
			return new Object[]{ "tag", 6L };
		}
		if ("methodA4".equals(method)) {
			return new Object[]{  };
		}
        if ("getMethodTags".equals(method)) {
            return new Object[]{};
        }
		throw new VeyronException("method: " + method + " not found");
	}
	// Methods from interface ServiceA.
	public void methodA1(ServerCall call) throws VeyronException { 
		this.service.methodA1(call);
	}
	public String methodA2(ServerCall call, int a, String b) throws VeyronException { 
		return this.service.methodA2(call, a, b);
	}
	public String methodA3(ServerCall call, int a) throws VeyronException { 
		final ServerCall serverCall = call;
		final Stream<Scalars,Void> stream = new Stream<Scalars,Void>() {
			@Override
			public void send(Scalars item) throws VeyronException {
				serverCall.send(item);
			}
			@Override
			public Void recv() throws java.io.EOFException, VeyronException {
				final TypeToken<?> type = new TypeToken<Void>() {};
				final Object result = serverCall.recv(type);
				try {
					return (Void)result;
				} catch (java.lang.ClassCastException e) {
					throw new VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
				}
			}
		};
		return this.service.methodA3(call, a, stream);
	}
	public void methodA4(ServerCall call, int a) throws VeyronException { 
		final ServerCall serverCall = call;
		final Stream<String,Integer> stream = new Stream<String,Integer>() {
			@Override
			public void send(String item) throws VeyronException {
				serverCall.send(item);
			}
			@Override
			public Integer recv() throws java.io.EOFException, VeyronException {
				final TypeToken<?> type = new TypeToken<Integer>() {};
				final Object result = serverCall.recv(type);
				try {
					return (Integer)result;
				} catch (java.lang.ClassCastException e) {
					throw new VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
				}
			}
		};
		this.service.methodA4(call, a, stream);
	}
}
