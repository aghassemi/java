// This file was auto-generated by the veyron vdl tool.
// Source: base.vdl
package com.veyron2.vdl.test_base;

import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

/**
 * type NamedList []uint32 
 **/
public final class NamedList implements List<java.lang.Integer> {
	private List<java.lang.Integer> impl;

	public NamedList(List<java.lang.Integer> impl) {
		this.impl = impl;
	}
	public List<java.lang.Integer> getValue() { return this.impl; }

	public void setValue(List<java.lang.Integer> newImpl) {
	    this.impl = newImpl;
	}

	@Override
	public boolean equals(java.lang.Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (this.getClass() != obj.getClass()) return false;
		final NamedList other = (NamedList)obj;
		if (!(this.impl.equals(other.impl))) return false;
		return true;
	}
	@Override
	public int hashCode() {
		return (impl == null ? 0 : impl.hashCode());
	}
    @Override
    public void add(int location, java.lang.Integer object) {
        impl.add(location, object);
    }
    @Override
    public boolean add(java.lang.Integer object) {
        return impl.add(object);
    }
    @Override
    public boolean addAll(int location, Collection<? extends java.lang.Integer> collection) {
        return impl.addAll(location, collection);
    }
    @Override
    public boolean addAll(Collection<? extends java.lang.Integer> collection) {
        return impl.addAll(collection);
    }
    @Override
    public void clear() {
        impl.clear();
    }
    @Override
    public boolean contains(Object object) {
        return impl.contains(object);
    }
    @Override
    public boolean containsAll(Collection<?> collection) {
        return impl.containsAll(collection);
    }
    @Override
    public java.lang.Integer get(int location) {
        return impl.get(location);
    }
    @Override
    public int indexOf(Object object) {
        return impl.indexOf(object);
    }
    @Override
    public boolean isEmpty() {
        return impl.isEmpty();
    }
    @Override
    public Iterator<java.lang.Integer> iterator() {
        return impl.iterator();
    }
    @Override
    public int lastIndexOf(Object object) {
        return impl.lastIndexOf(object);
    }
    @Override
    public ListIterator<java.lang.Integer> listIterator() {
        return impl.listIterator();
    }
    @Override
    public ListIterator<java.lang.Integer> listIterator(int location) {
        return impl.listIterator(location);
    }
    @Override
    public java.lang.Integer remove(int location) {
        return impl.remove(location);
    }
    @Override
    public boolean remove(Object object) {
        return impl.remove(object);
    }
    @Override
    public boolean removeAll(Collection<?> collection) {
        return impl.removeAll(collection);
    }
    @Override
    public boolean retainAll(Collection<?> collection) {
        return impl.retainAll(collection);
    }
    @Override
    public java.lang.Integer set(int location, java.lang.Integer object) {
        return impl.set(location, object);
    }
    @Override
    public int size() {
        return impl.size();
    }
    @Override
    public List<java.lang.Integer> subList(int start, int end) {
        return impl.subList(start, end);
    }
    @Override
    public Object[] toArray() {
        return impl.toArray();
    }
    @Override
    public <T> T[] toArray(T[] array) {
        return impl.toArray(array);
    }
}
