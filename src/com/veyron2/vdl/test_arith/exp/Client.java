// This file was auto-generated by the veyron vdl tool.
// Source(s):  exp.vdl
package com.veyron2.vdl.test_arith.exp;

import com.google.common.reflect.TypeToken;
import com.veyron2.ipc.Context;
import com.veyron2.ipc.VeyronException;
import com.veyron2.runtime.RuntimeFactory;

public class Client { 
	/* Bind methods for interfaces in file: exp.vdl. */
	@SuppressWarnings("unused")
	public static Exp bindExp(String name, com.veyron2.ipc.Client.BindOption... opts) {
		// TODO(spetrovic): check bind options.
		final com.veyron2.ipc.Client client = RuntimeFactory.getRuntime().getClient();
		return new ExpStub(client, name);
	}
	
	/* Client stubs for interfaces in file: exp.vdl. */
	private static class ExpStub implements Exp {
		private final com.veyron2.ipc.Client client;
		private final String name;

		ExpStub(com.veyron2.ipc.Client client, String name) {
			this.client = client;
			this.name = name;
		}
		// Methods from interface Exp.
		@Override
		public double exp(Context context, double x, com.veyron2.ipc.Client.CallOption... opts) throws VeyronException {
			// Prepare input arguments.
			final Object[] inArgs = new Object[]{ x };

			// Start the call.
			final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.name, "Exp", inArgs, opts);
			
			// Prepare output argument and finish the call.
			final TypeToken<?>[] resultTypes = new TypeToken<?>[]{ new TypeToken<Double>() {} };
			return (double)call.finish(resultTypes)[0];

		}
	}
}
