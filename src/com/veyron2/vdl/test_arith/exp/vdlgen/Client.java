// This file was auto-generated by the veyron vdl tool.
// Source(s):  exp.vdl
package com.veyron2.vdl.test_arith.exp.vdlgen;

import com.google.common.reflect.TypeToken;
import com.veyron2.OptionDefs;
import com.veyron2.Options;
import com.veyron2.RuntimeFactory;
import com.veyron2.ipc.Context;
import com.veyron2.ipc.VeyronException;

public class Client { 
	/* Bind methods for interfaces in file: exp.vdl. */
	public static Exp bindExp(String name) throws VeyronException {
		return bindExp(name, null);
	}
	public static Exp bindExp(String name, Options veyronOpts) throws VeyronException {
		com.veyron2.ipc.Client client = null;
		if (veyronOpts != null && veyronOpts.get(OptionDefs.CLIENT) != null) {
			client = veyronOpts.get(OptionDefs.CLIENT, com.veyron2.ipc.Client.class);
		} else if (veyronOpts != null && veyronOpts.get(OptionDefs.RUNTIME) != null) {
			client = veyronOpts.get(OptionDefs.RUNTIME, com.veyron2.Runtime.class).getClient();
		} else {
			client = RuntimeFactory.getRuntime().getClient();
		}
		return new ExpStub(client, name);
	}

	/* Client stubs for interfaces in file: exp.vdl. */
	private static class ExpStub implements Exp {
		private static final String vdlIfacePathOpt = "com.veyron2.vdl.test_arith.exp.vdlgen.Exp";
		private final com.veyron2.ipc.Client client;
		private final String name;

		ExpStub(com.veyron2.ipc.Client client, String name) {
			this.client = client;
			this.name = name;
		}
		// Methods from interface Exp.
		@Override
		public double exp(Context context, double x) throws VeyronException {
			return exp(context, x, null);
		}
		@Override
		public double exp(Context context, double x, Options veyronOpts) throws VeyronException {
			// Prepare input arguments.
			final Object[] inArgs = new Object[]{ new Double(x) };

			// Add VDL path option.
			// NOTE(spetrovic): this option is temporary and will be removed soon after we switch
			// Java to encoding/decoding from vom.Value objects.
			if (veyronOpts == null) veyronOpts = new Options();
			if (!veyronOpts.has(OptionDefs.VDL_INTERFACE_PATH)) {
				veyronOpts.set(OptionDefs.VDL_INTERFACE_PATH, ExpStub.vdlIfacePathOpt);
			}

			// Start the call.
			final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.name, "Exp", inArgs, veyronOpts);

			// Prepare output argument and finish the call.
			final TypeToken<?>[] resultTypes = new TypeToken<?>[]{ new TypeToken<Double>() {} };
			return (double)call.finish(resultTypes)[0];

		}
	}
}
