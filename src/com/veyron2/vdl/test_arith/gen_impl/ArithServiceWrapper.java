// This file was auto-generated by the veyron vdl tool.
// Source(s):  arith.vdl advanced.vdl
package com.veyron2.vdl.test_arith.gen_impl;

import com.google.common.reflect.TypeToken;
import com.veyron2.ipc.ServerCall;
import com.veyron2.ipc.VeyronException;
import com.veyron2.vdl.Stream;
import com.veyron2.vdl.test_arith.AdvancedMath;
import com.veyron2.vdl.test_arith.AdvancedMathFactory;
import com.veyron2.vdl.test_arith.AdvancedMathService;
import com.veyron2.vdl.test_arith.Arith;
import com.veyron2.vdl.test_arith.ArithFactory;
import com.veyron2.vdl.test_arith.ArithService;
import com.veyron2.vdl.test_arith.Calculator;
import com.veyron2.vdl.test_arith.CalculatorFactory;
import com.veyron2.vdl.test_arith.CalculatorService;
import com.veyron2.vdl.test_arith.Trigonometry;
import com.veyron2.vdl.test_arith.TrigonometryFactory;
import com.veyron2.vdl.test_arith.TrigonometryService;
import com.veyron2.vdl.test_arith.VeyronConsts;
import com.veyron2.vdl.test_base.Args;
import com.veyron2.vdl.test_base.NestedArgs;

public class ArithServiceWrapper {

	private final ArithService service;

	public ArithServiceWrapper(ArithService service) {
		this.service = service;
	}
	/**
	 * Returns all tags associated with the provided method or null if the method isn't implemented
	 * by this service.
	 */
	public Object[] getMethodTags(ServerCall call, String method) throws VeyronException { 
		if ("add".equals(method)) {
			return new Object[]{  };
		}
		if ("divMod".equals(method)) {
			return new Object[]{  };
		}
		if ("sub".equals(method)) {
			return new Object[]{  };
		}
		if ("mul".equals(method)) {
			return new Object[]{  };
		}
		if ("genError".equals(method)) {
			return new Object[]{ "foo", "barz", "hello", 129, 36L };
		}
		if ("count".equals(method)) {
			return new Object[]{  };
		}
		if ("streamingAdd".equals(method)) {
			return new Object[]{  };
		}
		if ("quoteAny".equals(method)) {
			return new Object[]{  };
		}
        if ("getMethodTags".equals(method)) {
            return new Object[]{};
        }
		throw new VeyronException("method: " + method + " not found");
	}
	// Methods from interface Arith.
	public int add(ServerCall call, int a, int b) throws VeyronException { 
		return this.service.add(call, a, b);
	}
	public ArithService.DivModOut divMod(ServerCall call, int a, int b) throws VeyronException { 
		return this.service.divMod(call, a, b);
	}
	public int sub(ServerCall call, Args args) throws VeyronException { 
		return this.service.sub(call, args);
	}
	public int mul(ServerCall call, NestedArgs nested) throws VeyronException { 
		return this.service.mul(call, nested);
	}
	public void genError(ServerCall call) throws VeyronException { 
		this.service.genError(call);
	}
	public void count(ServerCall call, int Start) throws VeyronException { 
		final ServerCall serverCall = call;
		final Stream<Integer,Void> stream = new Stream<Integer,Void>() {
			@Override
			public void send(Integer item) throws VeyronException {
				serverCall.send(item);
			}
			@Override
			public Void recv() throws java.io.EOFException, VeyronException {
				final TypeToken<?> type = new TypeToken<Void>() {};
				final Object result = serverCall.recv(type);
				try {
					return (Void)result;
				} catch (java.lang.ClassCastException e) {
					throw new VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
				}
			}
		};
		this.service.count(call, Start, stream);
	}
	public int streamingAdd(ServerCall call) throws VeyronException { 
		final ServerCall serverCall = call;
		final Stream<Integer,Integer> stream = new Stream<Integer,Integer>() {
			@Override
			public void send(Integer item) throws VeyronException {
				serverCall.send(item);
			}
			@Override
			public Integer recv() throws java.io.EOFException, VeyronException {
				final TypeToken<?> type = new TypeToken<Integer>() {};
				final Object result = serverCall.recv(type);
				try {
					return (Integer)result;
				} catch (java.lang.ClassCastException e) {
					throw new VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
				}
			}
		};
		return this.service.streamingAdd(call, stream);
	}
	public Object quoteAny(ServerCall call, Object a) throws VeyronException { 
		return this.service.quoteAny(call, a);
	}
}
