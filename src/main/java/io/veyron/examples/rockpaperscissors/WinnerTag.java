
// This file was auto-generated by the veyron vdl tool.
// Source: service.vdl
package io.veyron.examples.rockpaperscissors;

/**
 * type WinnerTag byte 
 * WinnerTag is a type used to indicate whether a round or a game was a draw,
 * was won by player 1 or was won by player 2.
 **/
public final class WinnerTag implements android.os.Parcelable, java.io.Serializable, com.google.gson.TypeAdapterFactory {
    private byte value;

    public WinnerTag(byte value) {
        this.value = value;
    }
    public byte getValue() { return this.value; }

    public void setValue(byte value) { this.value = value; }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (this.getClass() != obj.getClass()) return false;
        final io.veyron.examples.rockpaperscissors.WinnerTag other = (io.veyron.examples.rockpaperscissors.WinnerTag)obj;
        
        
        return this.value == other.value;
         
         
    }
    @Override
    public int hashCode() {
        return (int)value;
    }
    @Override
    public int describeContents() {
    	return 0;
    }
    @Override
    public void writeToParcel(android.os.Parcel out, int flags) {
   		com.veyron2.vdl.ParcelUtil.writeValue(out, value);
    }
	public static final android.os.Parcelable.Creator<WinnerTag> CREATOR
		= new android.os.Parcelable.Creator<WinnerTag>() {
		@Override
		public WinnerTag createFromParcel(android.os.Parcel in) {
			return new WinnerTag(in);
		}
		@Override
		public WinnerTag[] newArray(int size) {
			return new WinnerTag[size];
		}
	};
	private WinnerTag(android.os.Parcel in) {
		value = (byte) com.veyron2.vdl.ParcelUtil.readValue(in, getClass().getClassLoader(), value);
	}

	public WinnerTag() {}

	@Override
	public <T> com.google.gson.TypeAdapter<T> create(com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<T> type) {
		if (!type.equals(new com.google.gson.reflect.TypeToken<WinnerTag>(){})) {
			return null;
		}
		final com.google.gson.TypeAdapter<java.lang.Byte> delegate = gson.getAdapter(new com.google.gson.reflect.TypeToken<java.lang.Byte>() {});
		return new com.google.gson.TypeAdapter<T>() {
			@Override
			public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {
				delegate.write(out, ((WinnerTag) value).getValue());
			}
			@Override
			public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {
				return (T) new WinnerTag(delegate.read(in));
			}
		};
	}
}
