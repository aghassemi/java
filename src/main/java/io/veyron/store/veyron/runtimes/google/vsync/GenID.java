
// This file was auto-generated by the veyron vdl tool.
// Source: vsync.vdl
package io.veyron.store.veyron.runtimes.google.vsync;

/**
 * type GenID uint64 
 * GenID is the unique ID per generation per device.
 **/
public final class GenID implements android.os.Parcelable, java.io.Serializable, com.google.gson.TypeAdapterFactory {
    private long value;

    public GenID(long value) {
        this.value = value;
    }
    public long getValue() { return this.value; }

    public void setValue(long value) { this.value = value; }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (this.getClass() != obj.getClass()) return false;
        final io.veyron.store.veyron.runtimes.google.vsync.GenID other = (io.veyron.store.veyron.runtimes.google.vsync.GenID)obj;
        
        
        return this.value == other.value;
         
         
    }
    @Override
    public int hashCode() {
        return java.lang.Long.valueOf(value).hashCode();
    }
    @Override
    public int describeContents() {
    	return 0;
    }
    @Override
    public void writeToParcel(android.os.Parcel out, int flags) {
   		com.veyron2.vdl.ParcelUtil.writeValue(out, value);
    }
	public static final android.os.Parcelable.Creator<GenID> CREATOR
		= new android.os.Parcelable.Creator<GenID>() {
		@Override
		public GenID createFromParcel(android.os.Parcel in) {
			return new GenID(in);
		}
		@Override
		public GenID[] newArray(int size) {
			return new GenID[size];
		}
	};
	private GenID(android.os.Parcel in) {
		value = (long) com.veyron2.vdl.ParcelUtil.readValue(in, getClass().getClassLoader(), value);
	}

	public GenID() {}

	@Override
	public <T> com.google.gson.TypeAdapter<T> create(com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<T> type) {
		if (!type.equals(new com.google.gson.reflect.TypeToken<GenID>(){})) {
			return null;
		}
		final com.google.gson.TypeAdapter<java.lang.Long> delegate = gson.getAdapter(new com.google.gson.reflect.TypeToken<java.lang.Long>() {});
		return new com.google.gson.TypeAdapter<T>() {
			@Override
			public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {
				delegate.write(out, ((GenID) value).getValue());
			}
			@Override
			public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {
				return (T) new GenID(delegate.read(in));
			}
		};
	}
}
