// This file was auto-generated by the veyron vdl tool.
// Source(s):  syncgroup.vdl
package com.veyron.services.syncgroup.gen_impl;

/* Client stub for interface: SyncGroupServer. */
public final class SyncGroupServerStub implements com.veyron.services.syncgroup.SyncGroupServer {
    private static final java.lang.String vdlIfacePathOpt = "com.veyron.services.syncgroup.SyncGroupServer";
    private final com.veyron2.ipc.Client client;
    private final java.lang.String veyronName;

    
    
    
    private final com.veyron2.services.security.access.gen_impl.ObjectStub objectStub;
    

    public SyncGroupServerStub(final com.veyron2.ipc.Client client, final java.lang.String veyronName) {
        this.client = client;
        this.veyronName = veyronName;
        
        
        this.objectStub = new com.veyron2.services.security.access.gen_impl.ObjectStub(client, veyronName);
         
    }

    // Methods from interface SyncGroupServer.


    
    public com.veyron.services.syncgroup.SyncGroupInfo create(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.SyncGroupConfig createArgs, final com.veyron2.storage.ID rootOID, final com.veyron.services.syncgroup.NameIdentity joiner, final com.veyron.services.syncgroup.JoinerMetaData metaData) throws com.veyron2.ipc.VeyronException {
        return create(context, createArgs, rootOID, joiner, metaData, null);
    }
    
    public com.veyron.services.syncgroup.SyncGroupInfo create(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.SyncGroupConfig createArgs, final com.veyron2.storage.ID rootOID, final com.veyron.services.syncgroup.NameIdentity joiner, final com.veyron.services.syncgroup.JoinerMetaData metaData, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, SyncGroupServerStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{ createArgs, rootOID, joiner, metaData };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "create", inArgs, veyronOpts);

        // Finish the call.
        
        

         
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{
            
            new com.google.common.reflect.TypeToken<com.veyron.services.syncgroup.SyncGroupInfo>() {
                private static final long serialVersionUID = 1L;
            },
            
        };
        final java.lang.Object[] results = call.finish(resultTypes);
         
        return (com.veyron.services.syncgroup.SyncGroupInfo)results[0];
         

         

        
    }

    
    public com.veyron.services.syncgroup.SyncGroupInfo join(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.NameIdentity joiner, final com.veyron.services.syncgroup.JoinerMetaData metaData) throws com.veyron2.ipc.VeyronException {
        return join(context, joiner, metaData, null);
    }
    
    public com.veyron.services.syncgroup.SyncGroupInfo join(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.NameIdentity joiner, final com.veyron.services.syncgroup.JoinerMetaData metaData, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, SyncGroupServerStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{ joiner, metaData };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "join", inArgs, veyronOpts);

        // Finish the call.
        
        

         
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{
            
            new com.google.common.reflect.TypeToken<com.veyron.services.syncgroup.SyncGroupInfo>() {
                private static final long serialVersionUID = 1L;
            },
            
        };
        final java.lang.Object[] results = call.finish(resultTypes);
         
        return (com.veyron.services.syncgroup.SyncGroupInfo)results[0];
         

         

        
    }

    
    public void leave(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.NameIdentity name) throws com.veyron2.ipc.VeyronException {
         leave(context, name, null);
    }
    
    public void leave(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.NameIdentity name, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, SyncGroupServerStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{ name };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "leave", inArgs, veyronOpts);

        // Finish the call.
        
        

        
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{};
        call.finish(resultTypes);
         

        
    }

    
    public void eject(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.NameIdentity name) throws com.veyron2.ipc.VeyronException {
         eject(context, name, null);
    }
    
    public void eject(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.NameIdentity name, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, SyncGroupServerStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{ name };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "eject", inArgs, veyronOpts);

        // Finish the call.
        
        

        
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{};
        call.finish(resultTypes);
         

        
    }

    
    public void destroy(final com.veyron2.ipc.Context context) throws com.veyron2.ipc.VeyronException {
         destroy(context, null);
    }
    
    public void destroy(final com.veyron2.ipc.Context context, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, SyncGroupServerStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{  };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "destroy", inArgs, veyronOpts);

        // Finish the call.
        
        

        
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{};
        call.finish(resultTypes);
         

        
    }

    
    public com.veyron.services.syncgroup.SyncGroupInfo get(final com.veyron2.ipc.Context context) throws com.veyron2.ipc.VeyronException {
        return get(context, null);
    }
    
    public com.veyron.services.syncgroup.SyncGroupInfo get(final com.veyron2.ipc.Context context, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, SyncGroupServerStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{  };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "get", inArgs, veyronOpts);

        // Finish the call.
        
        

         
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{
            
            new com.google.common.reflect.TypeToken<com.veyron.services.syncgroup.SyncGroupInfo>() {
                private static final long serialVersionUID = 1L;
            },
            
        };
        final java.lang.Object[] results = call.finish(resultTypes);
         
        return (com.veyron.services.syncgroup.SyncGroupInfo)results[0];
         

         

        
    }

    
    public void setConfig(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.SyncGroupConfig config, final java.lang.String eTag) throws com.veyron2.ipc.VeyronException {
         setConfig(context, config, eTag, null);
    }
    
    public void setConfig(final com.veyron2.ipc.Context context, final com.veyron.services.syncgroup.SyncGroupConfig config, final java.lang.String eTag, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, SyncGroupServerStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{ config, eTag };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "setConfig", inArgs, veyronOpts);

        // Finish the call.
        
        

        
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{};
        call.finish(resultTypes);
         

        
    }




    @Override
    public com.veyron2.services.security.access.Object.GetACLOut getACL(final com.veyron2.ipc.Context context) throws com.veyron2.ipc.VeyronException {
        
        return this.objectStub.getACL(context);
    }
    @Override
    public com.veyron2.services.security.access.Object.GetACLOut getACL(final com.veyron2.ipc.Context context, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        return  this.objectStub.getACL(context, veyronOpts);
    }

    @Override
    public void setACL(final com.veyron2.ipc.Context context, final com.veyron2.security.ACL acl, final java.lang.String etag) throws com.veyron2.ipc.VeyronException {
        
         this.objectStub.setACL(context, acl, etag);
    }
    @Override
    public void setACL(final com.veyron2.ipc.Context context, final com.veyron2.security.ACL acl, final java.lang.String etag, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
          this.objectStub.setACL(context, acl, etag, veyronOpts);
    }


}
