// This file was auto-generated by the veyron vdl tool.
// Source(s):  wire.vdl
package com.veyron.tools.playground.testdata.pingpong.gen_impl;

/* Client stub for interface: PingPong. */
public final class PingPongStub implements com.veyron.tools.playground.testdata.pingpong.PingPong {
    private static final java.lang.String vdlIfacePathOpt = "veyron/tools/playground/testdata/pingpong/PingPong";
    private final com.veyron2.ipc.Client client;
    private final java.lang.String veyronName;

    
    

    public PingPongStub(final com.veyron2.ipc.Client client, final java.lang.String veyronName) {
        this.client = client;
        this.veyronName = veyronName;
        
        
    }

    // Methods from interface PingPong.


    
    public java.lang.String ping(final com.veyron2.ipc.Context context, final java.lang.String message) throws com.veyron2.ipc.VeyronException {
        return ping(context, message, null);
    }
    
    public java.lang.String ping(final com.veyron2.ipc.Context context, final java.lang.String message, com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException {
        
        // Add VDL path option.
        // NOTE(spetrovic): this option is temporary and will be removed soon after we switch
        // Java to encoding/decoding from vom.Value objects.
        if (veyronOpts == null) veyronOpts = new com.veyron2.Options();
        if (!veyronOpts.has(com.veyron2.OptionDefs.VDL_INTERFACE_PATH)) {
            veyronOpts.set(com.veyron2.OptionDefs.VDL_INTERFACE_PATH, PingPongStub.vdlIfacePathOpt);
        }

        
        // Start the call.
        final java.lang.Object[] inArgs = new java.lang.Object[]{ message };
        final com.veyron2.ipc.Client.Call call = this.client.startCall(context, this.veyronName, "ping", inArgs, veyronOpts);

        // Finish the call.
        
        

         
        final com.google.common.reflect.TypeToken<?>[] resultTypes = new com.google.common.reflect.TypeToken<?>[]{
            
            new com.google.common.reflect.TypeToken<java.lang.String>() {
                private static final long serialVersionUID = 1L;
            },
            
        };
        final java.lang.Object[] results = call.finish(resultTypes);
         
        return (java.lang.String)results[0];
         

         

        
    }





}
