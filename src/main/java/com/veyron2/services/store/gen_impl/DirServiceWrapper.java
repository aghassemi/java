// This file was auto-generated by the veyron vdl tool.
// Source(s):  service.vdl
package com.veyron2.services.store.gen_impl;

public final class DirServiceWrapper {

    private final com.veyron2.services.store.DirService service;



    
    private final com.veyron2.services.store.gen_impl.TransactableServiceWrapper transactableWrapper;
    
    
    private final com.veyron2.services.store.gen_impl.StatableServiceWrapper statableWrapper;
    
    
    private final com.veyron2.services.mounttable.gen_impl.GlobbableServiceWrapper globbableWrapper;
    
    
    private final com.veyron2.services.watch.gen_impl.GlobWatcherServiceWrapper globWatcherWrapper;
    
    
    private final com.veyron2.services.watch.gen_impl.QueryWatcherServiceWrapper queryWatcherWrapper;
    

    public DirServiceWrapper(final com.veyron2.services.store.DirService service) {
        this.service = service;
        
        
        this.transactableWrapper = new com.veyron2.services.store.gen_impl.TransactableServiceWrapper(service);
        
        this.statableWrapper = new com.veyron2.services.store.gen_impl.StatableServiceWrapper(service);
        
        this.globbableWrapper = new com.veyron2.services.mounttable.gen_impl.GlobbableServiceWrapper(service);
        
        this.globWatcherWrapper = new com.veyron2.services.watch.gen_impl.GlobWatcherServiceWrapper(service);
        
        this.queryWatcherWrapper = new com.veyron2.services.watch.gen_impl.QueryWatcherServiceWrapper(service);
        
    }

    /**
     * Returns all tags associated with the provided method or null if the method isn't implemented
     * by this service.
     */
    public java.lang.Object[] getMethodTags(final com.veyron2.ipc.ServerCall call, final java.lang.String method) throws com.veyron2.ipc.VeyronException {
        
        if ("exists".equals(method)) {
            return new java.lang.Object[] {
                
            };
        }
        
        if ("getMethodTags".equals(method)) {
            return new java.lang.Object[] {
                
            };
        }
        
        if ("make".equals(method)) {
            return new java.lang.Object[] {
                
            };
        }
        
        if ("query".equals(method)) {
            return new java.lang.Object[] {
                
            };
        }
        
        if ("remove".equals(method)) {
            return new java.lang.Object[] {
                
            };
        }
        
        
        try {
            return this.transactableWrapper.getMethodTags(call, method);
        } catch (com.veyron2.ipc.VeyronException e) {}  // method not found.
        
        try {
            return this.statableWrapper.getMethodTags(call, method);
        } catch (com.veyron2.ipc.VeyronException e) {}  // method not found.
        
        try {
            return this.globbableWrapper.getMethodTags(call, method);
        } catch (com.veyron2.ipc.VeyronException e) {}  // method not found.
        
        try {
            return this.globWatcherWrapper.getMethodTags(call, method);
        } catch (com.veyron2.ipc.VeyronException e) {}  // method not found.
        
        try {
            return this.queryWatcherWrapper.getMethodTags(call, method);
        } catch (com.veyron2.ipc.VeyronException e) {}  // method not found.
        
        throw new com.veyron2.ipc.VeyronException("method: " + method + " not found");
    }

     
    
    public boolean exists(final com.veyron2.ipc.ServerCall call) throws com.veyron2.ipc.VeyronException {
         
         return  this.service.exists( call   );
    }

    public void make(final com.veyron2.ipc.ServerCall call) throws com.veyron2.ipc.VeyronException {
         
         this.service.make( call   );
    }

    public void remove(final com.veyron2.ipc.ServerCall call) throws com.veyron2.ipc.VeyronException {
         
         this.service.remove( call   );
    }

    public void query(final com.veyron2.ipc.ServerCall call, final com.veyron2.query.Query Q) throws com.veyron2.ipc.VeyronException {
        
        final com.veyron2.vdl.Stream<java.lang.Void, com.veyron2.services.store.QueryResult> stream = new com.veyron2.vdl.Stream<java.lang.Void, com.veyron2.services.store.QueryResult>() {
            @Override
            public void send(java.lang.Void item) throws com.veyron2.ipc.VeyronException {
                call.send(item);
            }
            @Override
            public com.veyron2.services.store.QueryResult recv() throws java.io.EOFException, com.veyron2.ipc.VeyronException {
                final com.google.common.reflect.TypeToken<?> type = new com.google.common.reflect.TypeToken< com.veyron2.services.store.QueryResult >() {
                    private static final long serialVersionUID = 1L;
                };
                final java.lang.Object result = call.recv(type);
                try {
                    return (com.veyron2.services.store.QueryResult)result;
                } catch (java.lang.ClassCastException e) {
                    throw new com.veyron2.ipc.VeyronException("Unexpected result type: " + result.getClass().getCanonicalName());
                }
            }
        };
         
         this.service.query( call , Q  ,stream  );
    }




    public void glob(final com.veyron2.ipc.ServerCall call, final java.lang.String pattern) throws com.veyron2.ipc.VeyronException {
        
          this.globbableWrapper.glob(call, pattern);
    }

    public com.veyron2.storage.Stat stat(final com.veyron2.ipc.ServerCall call) throws com.veyron2.ipc.VeyronException {
        
        return  this.statableWrapper.stat(call);
    }

    public java.lang.String newTransaction(final com.veyron2.ipc.ServerCall call, final java.util.ArrayList<java.lang.Object> Options) throws com.veyron2.ipc.VeyronException {
        
        return  this.transactableWrapper.newTransaction(call, Options);
    }

    public void watchGlob(final com.veyron2.ipc.ServerCall call, final com.veyron2.services.watch.types.GlobRequest Req) throws com.veyron2.ipc.VeyronException {
        
          this.globWatcherWrapper.watchGlob(call, Req);
    }

    public void watchQuery(final com.veyron2.ipc.ServerCall call, final com.veyron2.services.watch.types.QueryRequest Req) throws com.veyron2.ipc.VeyronException {
        
          this.queryWatcherWrapper.watchQuery(call, Req);
    }
 

}
