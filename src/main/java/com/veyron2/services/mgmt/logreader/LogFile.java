// This file was auto-generated by the veyron vdl tool.
// Source: logreader.vdl
package com.veyron2.services.mgmt.logreader;

/**
 * LogFile can be used to access log files remotely.
 */

public interface LogFile  {

    
    

    
    // Size returns the number of bytes in the receiving object.

    public long size(final com.veyron2.ipc.Context context) throws com.veyron2.ipc.VeyronException;
    public long size(final com.veyron2.ipc.Context context, final com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException;

    
    

    
    // ReadLog receives up to NumEntries log entries starting at the
// StartPos offset (in bytes) in the receiving object. Each stream chunk
// contains one log entry.
//
// If Follow is true, ReadLog will block and wait for more entries to
// arrive when it reaches the end of the file.
//
// ReadLog returns the position where it stopped reading, i.e. the
// position where the next entry starts. This value can be used as
// StartPos for successive calls to ReadLog.
//
// The returned error will be io.EOF if and only if ReadLog reached the
// end of the file and no log entries were returned.

    public com.veyron2.vdl.ClientStream<java.lang.Void,com.veyron2.services.mgmt.logreader.LogEntry, java.lang.Long> readLog(final com.veyron2.ipc.Context context, final long StartPos, final int NumEntries, final boolean Follow) throws com.veyron2.ipc.VeyronException;
    public com.veyron2.vdl.ClientStream<java.lang.Void,com.veyron2.services.mgmt.logreader.LogEntry, java.lang.Long> readLog(final com.veyron2.ipc.Context context, final long StartPos, final int NumEntries, final boolean Follow, final com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException;

}
