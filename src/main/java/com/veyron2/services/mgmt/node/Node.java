// This file was auto-generated by the veyron vdl tool.
// Source: node.vdl
package com.veyron2.services.mgmt.node;

/**
 * Node can be used to manage a node. The idea is that this interface
 * will be invoked using an object name that identifies the node.
 */

public interface Node extends com.veyron2.services.security.access.Object, com.veyron2.services.mgmt.node.Application {

    
    

    
    // Claim is used to claim ownership of a Node running on a device
// by blessing its identity. By default, after this call all node
// methods will be access protected to the identity of the claimer.

    public void claim(final com.veyron2.ipc.Context context) throws com.veyron2.ipc.VeyronException;
    public void claim(final com.veyron2.ipc.Context context, final com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException;

    
    

    
    // Describe generates a description of the node.

    public com.veyron2.services.mgmt.node.Description describe(final com.veyron2.ipc.Context context) throws com.veyron2.ipc.VeyronException;
    public com.veyron2.services.mgmt.node.Description describe(final com.veyron2.ipc.Context context, final com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException;

    
    

    
    // IsRunnable checks if the node can execute the given binary.

    public boolean isRunnable(final com.veyron2.ipc.Context context, final com.veyron2.services.mgmt.binary.Description Description) throws com.veyron2.ipc.VeyronException;
    public boolean isRunnable(final com.veyron2.ipc.Context context, final com.veyron2.services.mgmt.binary.Description Description, final com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException;

    
    

    
    // Reset resets the node. If the deadline is non-zero and the node
// in question is still running after the given deadline expired,
// reset of the node is enforced.
//
// TODO(jsimsa): Switch deadline to time.Duration when built-in types
// are implemented.

    public void reset(final com.veyron2.ipc.Context context, final long Deadline) throws com.veyron2.ipc.VeyronException;
    public void reset(final com.veyron2.ipc.Context context, final long Deadline, final com.veyron2.Options veyronOpts) throws com.veyron2.ipc.VeyronException;

}
