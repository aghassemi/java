// This file was auto-generated by the veyron vdl tool.
// Source: wire.vdl
package com.veyron2.security.wire;

/**
 * type Caveat struct{Service veyron2/security.BlessingPattern string;Bytes []byte} 
 * Caveat represents a veyron2/security.ServiceCaveat.
 **/
public final class Caveat {
    
    
      private com.veyron2.security.BlessingPattern service;
    
      private java.util.ArrayList<java.lang.Byte> bytes;
    

    
    public Caveat(final com.veyron2.security.BlessingPattern service, final java.util.ArrayList<java.lang.Byte> bytes) {
        
            this.service = service;
        
            this.bytes = bytes;
        
    }

    
    
    public com.veyron2.security.BlessingPattern getService() {
        return this.service;
    }
    public void setService(com.veyron2.security.BlessingPattern service) {
        this.service = service;
    }
    
    public java.util.ArrayList<java.lang.Byte> getBytes() {
        return this.bytes;
    }
    public void setBytes(java.util.ArrayList<java.lang.Byte> bytes) {
        this.bytes = bytes;
    }
    

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (this.getClass() != obj.getClass()) return false;
        final Caveat other = (Caveat)obj;

        
        
        if (this.service == null) {
            if (other.service != null) {
                return false;
            }
        } else if (!this.service.equals(other.service)) {
            return false;
        }
         
        
        
        if (this.bytes == null) {
            if (other.bytes != null) {
                return false;
            }
        } else if (!this.bytes.equals(other.bytes)) {
            return false;
        }
         
         
        return true;
    }
    @Override
    public int hashCode() {
        int result = 1;
        final int prime = 31;
        
        result = prime * result + (service == null ? 0 : service.hashCode());
        
        result = prime * result + (bytes == null ? 0 : bytes.hashCode());
        
        return result;
    }
}