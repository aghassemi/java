
// This file was auto-generated by the veyron vdl tool.
// Source: types.vdl
package com.veyron2.security;

/**
 * type BlessingPattern string 
 * BlessingPattern is a pattern that is matched by specific blessings.
 * 
 * A pattern can be either a blessing (slash-separated human-readable string)
 * or a blessing ending in a glob ("/..."). A blessing matches a pattern if it
 * can be extended to produce the same string as the pattern.  For example, the
 * pattern "a/b/c" is matched by the blessings "a", "a/b" and "a/b/c" but not
 * "x", not "a/x", not "a/b/x" and not "a/b/c/x".
 * 
 * Additionally, when the pattern ends with a glob ("/..."), it is matched by
 * all blessings that represent delegates of the pattern string excluding the
 * glob. For example, the pattern "a/b/c/..." is matched by all the patterns
 * that match "a/b/c" ("a", "a/b", "a/b/c") and all delegates of "a/b/c" (like
 * "a/b/c/d", "a/b/c/d/e" etc.).
 **/
public final class BlessingPattern implements android.os.Parcelable, java.io.Serializable, com.google.gson.TypeAdapterFactory {
    private java.lang.String value;

    public BlessingPattern(java.lang.String value) {
        this.value = value;
    }
    public java.lang.String getValue() { return this.value; }

    public void setValue(java.lang.String value) { this.value = value; }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (this.getClass() != obj.getClass()) return false;
        final com.veyron2.security.BlessingPattern other = (com.veyron2.security.BlessingPattern)obj;
        
        
        if (this.value == null) {
            return other.value == null;
        }
        return this.value.equals(other.value);
         
         
    }
    @Override
    public int hashCode() {
        return (value == null ? 0 : value.hashCode());
    }
    @Override
    public int describeContents() {
    	return 0;
    }
    @Override
    public void writeToParcel(android.os.Parcel out, int flags) {
   		com.veyron2.vdl.ParcelUtil.writeValue(out, value);
    }
	public static final android.os.Parcelable.Creator<BlessingPattern> CREATOR
		= new android.os.Parcelable.Creator<BlessingPattern>() {
		@Override
		public BlessingPattern createFromParcel(android.os.Parcel in) {
			return new BlessingPattern(in);
		}
		@Override
		public BlessingPattern[] newArray(int size) {
			return new BlessingPattern[size];
		}
	};
	private BlessingPattern(android.os.Parcel in) {
		value = (java.lang.String) com.veyron2.vdl.ParcelUtil.readValue(in, getClass().getClassLoader(), value);
	}

	public BlessingPattern() {}

	@Override
	public <T> com.google.gson.TypeAdapter<T> create(com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<T> type) {
		if (!type.equals(new com.google.gson.reflect.TypeToken<BlessingPattern>(){})) {
			return null;
		}
		final com.google.gson.TypeAdapter<java.lang.String> delegate = gson.getAdapter(new com.google.gson.reflect.TypeToken<java.lang.String>() {});
		return new com.google.gson.TypeAdapter<T>() {
			@Override
			public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {
				delegate.write(out, ((BlessingPattern) value).getValue());
			}
			@Override
			public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {
				return (T) new BlessingPattern(delegate.read(in));
			}
		};
	}
}
