buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
    }
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'wrapper'

repositories {
    mavenCentral()
}

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile 'com.google.truth:truth:0.27'
}

class VdlPlatform {
    final String name
    final String goOs
    final String goArch

    VdlPlatform(String name, String goOs, String goArch) {
        this.name = name
        this.goOs = goOs
        this.goArch = goArch
    }
}

def platforms = [new VdlPlatform("linux", "linux", "amd64"),
                 new VdlPlatform("macosx", "darwin", "amd64")]

def pomDependencies = new Node(null, 'dependencies')

platforms.each({ platform ->
    task "buildVdl${platform.name}"(type: Exec) {
        description 'Build the VDL tool'
        group 'Build'
        environment GOOS: platform.goOs
        environment GOARCH: platform.goArch
        commandLine 'jiri', 'go', 'build', '-o', "build/vdltool/vdl-${platform.name}",
                'v.io/x/ref/cmd/vdl'
    }

    task "natives-${platform.name}"(type: Jar, dependsOn: "buildVdl${platform.name}") {
        from 'build/vdltool/vdl-' + platform.name
    }

    tasks.'processResources'.dependsOn("buildVdl${platform.name}")

    def dependencyNode = new XmlParser().parseText("""
<dependency>
    <groupId>io.v</groupId>
    <artifactId>gradle-plugin-vdltool-${platform.name}</artifactId>
    <version>0.1-SNAPSHOT</version>
</dependency>
""")
    pomDependencies.append(dependencyNode)
})

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

javadoc {
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

// Adds XML nodes representing fields required for publication to Maven central to the given node.
def addMavenCentralMetadata(Node node) {
    node.appendNode('name', 'Vanadium VDL Gradle plugin')
    node.appendNode('description',
            'A Gradle plugin to make it easy to use VDL in Java or Android projects')
    node.appendNode('url', 'https://github.com/vanadium/java/tree/master/gradle-plugin')

    def license = node.appendNode('licenses').appendNode('license')
    license.appendNode('name', 'New BSD License')
    license.appendNode('url', 'https://github.com/vanadium/java/blob/master/LICENSE')
    license.appendNode('distribution', 'repo')

    node.appendNode('scm').appendNode('url',
            'https://github.com/vanadium/java/tree/master/gradle-plugin')

    def developerInfo = node.appendNode('developers').appendNode('developer')
    developerInfo.appendNode('id', 'vanadium')
    developerInfo.appendNode('name', 'The Vanadium Contributors')
    developerInfo.appendNode('email', 'vanadium-discuss@v.io')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'io.v'
            artifactId 'gradle-plugin'
            version '0.1'

            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom.withXml {
                addMavenCentralMetadata(asNode())
                asNode().append(pomDependencies)
            }
        }

        platforms.each({ platform ->
            "mavenNatives${platform.name}"(MavenPublication) {
                groupId 'io.v'
                artifactId "gradle-plugin-vdltool-${platform.name}"
                version '0.1'

                artifact project.tasks."natives-${platform.name}"

                pom.withXml {
                    addMavenCentralMetadata(asNode())
                }
            }
        })
    }
    repositories {
        maven {
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
        }
    }
}

wrapper {
    gradleVersion = '2.4'
}

nexusStaging {
    packageGroup = 'io.v'
}
